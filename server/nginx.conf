worker_processes auto;
include /etc/nginx/modules-enabled/*.conf;

events {
    worker_connections  1024;
}

http {
    #include /etc/nginx/conf.d/*.conf;
    #proxy_set_header Server "blog/0.1.0";
    ssl on;
    ssl_certificate     /home/lander/sert/myblog.crt;
    ssl_certificate_key /home/lander/sert/myblog.key;
    more_set_headers 'Server: blog';
    proxy_cache_methods GET HEAD;

    upstream node_server {
        server 127.0.0.1:3000 max_fails=3 fail_timeout=30s weight=2;
		server 127.0.0.1:3001 max_fails=1 fail_timeout=30s weight=1;
		server 127.0.0.1:3002 max_fails=1 fail_timeout=30s weight=1;
    }

    upstream pgadmin {
      server unix:///tmp/pgadmin.sock;
    }

    # кеширование
    proxy_cache_path /var/cache/nginx levels=1:2 keys_zone=all:32m max_size=1g;
    proxy_cache all;
    proxy_cache_use_stale error timeout invalid_header updating http_500 http_502 http_503 http_504;
    
    server {
        listen 442;
    #    return  301 https://$host$request_uri;
   # 
        location / {
            proxy_pass https://127.0.0.1:443/;
            #proxy_cache all;
		    proxy_cache_valid 404 502 503 1m;
            proxy_cache_valid any 1h;
        }
    }
    server {
        listen 443;
        server_name myblog;
        #set $my_host "MyBlog";
        
        client_max_body_size 200M;
	    # включаем сжатие	
	    gzip on;
	
        # путь до фронтенда
        root /home/lander/servers/public;

        #location / {
        #   	root /home/lander/servers/static/;
		#	try_files $uri $uri/ /image.jpg =404;
		#	http2_push /static/image.JPG;
        # }
        #location / {   
            #root etc/nginx/data/images;
            #try_files $uri $uri/ /index.html =404;
            #root /home/lander/servers/static;
        	#try_files $uri $uri/ $uri/index.html /index.html;
    		#http2_push /static/image.jpg;
        #}
        
        location / {
            root /home/lander/servers/public;        
            try_files $uri $uri/ ./index.html =404;
        }
        
        location /pgadmin/ {
            proxy_set_header X-Script-Name /pgadmin;
            proxy_set_header X-Scheme $scheme;
            proxy_set_header Host $host;
            proxy_pass http://localhost:5050/;
            proxy_redirect off;
    }



        # сервер Node.js
        location /api/ {
            proxy_pass http://node_server/api/;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_cache_bypass $http_upgrade;
        }
        
        location = /test {
            return 301 /;
        }

        # статус nginx
        location = /status {
            stub_status;
        }

    }
}

